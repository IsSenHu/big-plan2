02-01 10:16:14.894 INFO  --- [main] [SpringApplication]:651 com.gapache.cloud.auth.server.AuthCenterServer >>> No active profile set, falling back to default profiles: default
02-01 10:16:15.736 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
02-01 10:16:16.033 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:16:16.033 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-01 10:16:16.160 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 120ms. Found 9 JPA repository interfaces.
02-01 10:16:16.185 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:16:16.187 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
02-01 10:16:16.212 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.client.ClientRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.212 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.213 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceServerRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.214 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.215 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.215 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.216 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserClientRelationRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.216 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.217 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:16:16.217 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
02-01 10:16:16.334 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
02-01 10:16:16.495 INFO  --- [main] [GenericScope]:295 o.springframework.cloud.context.scope.GenericScope >>> BeanFactory id=c77ab896-accd-3f33-b41a-69bc393e8f7e
02-01 10:16:16.650 INFO  --- [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker]:330 o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >>> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02-01 10:16:17.111 INFO  --- [main] [TomcatWebServer]:92 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat initialized with port(s): 10000 (http)
02-01 10:16:17.122 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardService >>> Starting service [Tomcat]
02-01 10:16:17.123 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardEngine >>> Starting Servlet engine: [Apache Tomcat/9.0.29]
02-01 10:16:17.231 INFO  --- [main] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring embedded WebApplicationContext
02-01 10:16:17.231 INFO  --- [main] [ServletWebServerApplicationContext]:284 org.springframework.web.context.ContextLoader >>> Root WebApplicationContext: initialization completed in 2315 ms
02-01 10:16:18.075 INFO  --- [main] [AccessCardPersistenceFilter]:64 c.g.security.filter.AccessCardPersistenceFilter >>> init accessCardPersistenceFilter
02-01 10:16:18.171 INFO  --- [main] [LogHelper]:31 org.hibernate.jpa.internal.util.LogHelper >>> HHH000204: Processing PersistenceUnitInfo [name: default]
02-01 10:16:18.236 INFO  --- [main] [Version]:46 org.hibernate.Version >>> HHH000412: Hibernate Core {5.4.9.Final}
02-01 10:16:18.383 INFO  --- [main] [JavaReflectionManager]:49 org.hibernate.annotations.common.Version >>> HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
02-01 10:16:18.477 INFO  --- [main] [HikariDataSource]:110 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Starting...
02-01 10:16:18.616 INFO  --- [main] [HikariDataSource]:123 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Start completed.
02-01 10:16:18.626 INFO  --- [main] [Dialect]:172 org.hibernate.dialect.Dialect >>> HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
02-01 10:16:19.476 INFO  --- [main] [JtaPlatformInitiator]:52 o.h.e.t.jta.platform.internal.JtaPlatformInitiator >>> HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-01 10:16:19.483 INFO  --- [main] [AbstractEntityManagerFactoryBean]:416 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Initialized JPA EntityManagerFactory for persistence unit 'default'
02-01 10:16:20.222 INFO  --- [main] [SecurityAutoConfiguration]:46 c.g.security.config.SecurityAutoConfiguration >>> 启用私钥进行签名############
02-01 10:16:20.599 INFO  --- [main] [SecurityAutoConfiguration]:39 c.g.security.config.SecurityAutoConfiguration >>> 启用公钥解密############
02-01 10:16:20.604 INFO  --- [main] [Oauth2Controller]:47 c.g.cloud.auth.server.controller.Oauth2Controller >>> Oauth2Controller init:{authorization_code=com.gapache.cloud.auth.server.security.impl.AuthorizationCodeGenerateTokenLogic@c96c497, client_credentials=com.gapache.cloud.auth.server.security.impl.ClientCredentialsGenerateTokenLogic@6e337ba1, password=com.gapache.cloud.auth.server.security.impl.PasswordBaseGenerateTokenLogic@53a16dd6, refresh_token=com.gapache.cloud.auth.server.security.impl.RefreshTokenGenerateTokenLogic@126d8659}
02-01 10:16:20.895 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/images/**'], []
02-01 10:16:20.895 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/lib/**'], []
02-01 10:16:20.895 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/css/**'], []
02-01 10:16:20.895 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/fonts/**'], []
02-01 10:16:20.895 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/js/**'], []
02-01 10:16:20.896 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/eleTree.js'], []
02-01 10:16:20.896 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/favicon.ico'], []
02-01 10:16:20.896 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/excel/**'], []
02-01 10:16:20.896 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui_exts/**'], []
02-01 10:16:20.896 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui/**'], []
02-01 10:16:20.943 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ade62a6, org.springframework.security.web.context.SecurityContextPersistenceFilter@700202fa, org.springframework.security.web.header.HeaderWriterFilter@39159b14, org.springframework.security.web.authentication.logout.LogoutFilter@2c2edbe7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@176054b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3794b7b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@129aaac1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53d15034, org.springframework.security.web.session.SessionManagementFilter@aaa7000, org.springframework.security.web.access.ExceptionTranslationFilter@525b9df4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@857f1a7]
02-01 10:16:20.965 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:16:20.975 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:16:21.208 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Initializing ExecutorService 'applicationTaskExecutor'
02-01 10:16:21.420 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 10:16:21.692 INFO  --- [main] [Version]:41 org.redisson.Version >>> Redisson 3.13.4
02-01 10:16:22.024 INFO  --- [redisson-netty-4-19] [ConnectionPool$1]:167 o.r.connection.pool.MasterPubSubConnectionPool >>> 1 connections initialized for /127.0.0.1:6379
02-01 10:16:22.049 INFO  --- [redisson-netty-4-20] [ConnectionPool$1]:167 org.redisson.connection.pool.MasterConnectionPool >>> 24 connections initialized for /127.0.0.1:6379
02-01 10:16:22.127 INFO  --- [main] [RedissonAutoConfiguration]:48 com.gapache.redis.RedissonAutoConfiguration >>> init redissonClient and DistributedLock success
02-01 10:16:22.136 INFO  --- [main] [AuthResourceServerAutoConfiguration$LocalResourceReporterAutoConfiguration]:165 c.g.s.config.AuthResourceServerAutoConfiguration >>> enable register to self[Auth-Center-Server]
02-01 10:16:22.146 INFO  --- [main] [AuthResourceServerAutoConfiguration$RemotePublicKeyLoaderAutoConfiguration]:183 c.g.s.config.AuthResourceServerAutoConfiguration >>> cloudRestTemplate
02-01 10:16:22.168 INFO  --- [main] [AuthResourceServerAutoConfiguration]:61 c.g.s.config.AuthResourceServerAutoConfiguration >>> auto setting AuthResourceServer's config
02-01 10:16:22.600 INFO  --- [main] [EndpointLinksResolver]:58 o.s.b.actuate.endpoint.web.EndpointLinksResolver >>> Exposing 18 endpoint(s) beneath base path '/actuator'
02-01 10:16:22.730 INFO  --- [main] [AuthCenterServer]:96 com.gapache.cloud.auth.server.AuthCenterServer >>> 1.AuthCenter
02-01 10:16:23.011 INFO  --- [main] [AuthCenterServer]:79 com.gapache.cloud.auth.server.AuthCenterServer >>> husen.$2a$10$if7P8DDcK3ETiul9rR.yMOY3hR2VIpqdRGhWvu6QSSnyWe3XrBPOK.我是超级管理员.https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif
02-01 10:16:23.048 INFO  --- [main] [TomcatWebServer]:204 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat started on port(s): 10000 (http) with context path ''
02-01 10:16:23.241 INFO  --- [main] [NacosServiceRegistry]:65 c.a.cloud.nacos.registry.NacosServiceRegistry >>> nacos registry, DEFAULT_GROUP auth-center-server 192.168.1.100:10000 register finished
02-01 10:16:23.248 INFO  --- [main] [StartupInfoLogger]:61 com.gapache.cloud.auth.server.AuthCenterServer >>> Started AuthCenterServer in 9.493 seconds (JVM running for 10.637)
02-01 10:16:23.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:66 c.g.s.config.AuthResourceServerAutoConfiguration >>> AuthResourceServerAutoConfiguration listening event:org.springframework.boot.context.event.ApplicationReadyEvent[source=org.springframework.boot.SpringApplication@67201002]
02-01 10:16:23.276 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:client, clientController, com.gapache.cloud.auth.server.controller.ClientController@7ac90dab
02-01 10:16:23.279 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:role, roleController, com.gapache.cloud.auth.server.controller.RoleController@4d964c9e
02-01 10:16:23.280 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:user, userController, com.gapache.cloud.auth.server.controller.UserController@776a3365
02-01 10:16:23.281 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:page, name=分页查询角色)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:update, name=更新角色)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:delete, name=删除角色)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:create, name=创建角色)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:findByClientId, name=根据clientId查询client)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:bindUser, name=绑定用户到客户端)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:create, name=创建客户端)
02-01 10:16:23.282 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:setUserRole, name=设置用户角色)
02-01 10:16:23.283 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:create, name=创建用户)
02-01 10:16:23.296 INFO  --- [main] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"分页查询角色","scope":"role:page"},{"name":"更新角色","scope":"role:update"},{"name":"删除角色","scope":"role:delete"},{"name":"创建角色","scope":"role:create"},{"name":"根据clientId查询client","scope":"client:findByClientId"},{"name":"绑定用户到客户端","scope":"client:bindUser"},{"name":"创建客户端","scope":"client:create"},{"name":"设置用户角色","scope":"user:setUserRole"},{"name":"创建用户","scope":"user:create"}],"clientId":"husen19950528201314lq19980824","resourceServerName":"AuthCenter"}
02-01 10:16:23.347 INFO  --- [main] [ResourceServiceImpl]:109 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 10:16:23.351 INFO  --- [main] [ResourceServiceImpl]:112 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 10:16:23.352 INFO  --- [main] [ResourceServiceImpl]:114 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[]
02-01 10:16:23.366 INFO  --- [main] [AuthResourceServerAutoConfiguration]:134 c.g.s.config.AuthResourceServerAutoConfiguration >>> reporting resource finish, result:true, cost time:0ms
02-01 10:16:23.497 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring DispatcherServlet 'dispatcherServlet'
02-01 10:16:23.498 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [FrameworkServlet]:525 org.springframework.web.servlet.DispatcherServlet >>> Initializing Servlet 'dispatcherServlet'
02-01 10:16:23.525 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [FrameworkServlet]:547 org.springframework.web.servlet.DispatcherServlet >>> Completed initialization in 27 ms
02-01 10:16:23.716 INFO  --- [boundedElastic-1] [EpollProvider]:68 io.lettuce.core.EpollProvider >>> Starting without optional epoll library
02-01 10:16:23.718 INFO  --- [boundedElastic-1] [KqueueProvider]:70 io.lettuce.core.KqueueProvider >>> Starting without optional kqueue library
02-01 10:23:13.821 INFO  --- [http-nio-10000-exec-1] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"根据ID查询用户","scope":"User:get"},{"name":"更新用户","scope":"User:update"},{"name":"删除用户","scope":"User:delete"},{"name":"创建用户","scope":"User:create"},{"name":"根据用户名查询用户","scope":"User:findByUsername"},{"name":"判断用户是否存在","scope":"User:userIsExisted"},{"name":"根据ID查询用户自定义信息","scope":"UserCustomizeInfo:get"},{"name":"更新用户自定义信息","scope":"UserCustomizeInfo:update"},{"name":"删除用户自定义信息","scope":"UserCustomizeInfo:delete"},{"name":"创建用户自定义信息","scope":"UserCustomizeInfo:create"}],"clientId":"","resourceServerName":"UserServer"}
02-01 10:26:33.507 WARN  --- [http-nio-10000-exec-7] [AbstractHandlerExceptionResolver]:199 o.s.w.s.m.support.DefaultHandlerExceptionResolver >>> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.gapache.commons.model.JsonResult<java.lang.Boolean> com.gapache.cloud.auth.server.controller.ResourceController.receiveReportData(com.gapache.security.model.ResourceReportDTO)]
02-01 10:26:42.705 INFO  --- [http-nio-10000-exec-10] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{}
02-01 10:34:30.973 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 10:34:31.047 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:80 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registering from Nacos Server now...
02-01 10:34:31.053 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:100 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registration finished.
02-01 10:34:31.055 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Shutting down ExecutorService 'applicationTaskExecutor'
02-01 10:34:31.063 INFO  --- [SpringContextShutdownHook] [AbstractEntityManagerFactoryBean]:598 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Closing JPA EntityManagerFactory for persistence unit 'default'
02-01 10:34:31.190 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:350 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown initiated...
02-01 10:34:31.208 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:352 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown completed.
02-01 10:34:31.226 INFO  --- [SpringContextShutdownHook] [AccessCardPersistenceFilter]:69 c.g.security.filter.AccessCardPersistenceFilter >>> destroy accessCardPersistenceFilter
02-01 10:34:37.829 INFO  --- [main] [SpringApplication]:651 com.gapache.cloud.auth.server.AuthCenterServer >>> No active profile set, falling back to default profiles: default
02-01 10:34:38.584 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
02-01 10:34:38.861 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:34:38.861 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-01 10:34:38.977 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 108ms. Found 9 JPA repository interfaces.
02-01 10:34:38.995 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:34:38.996 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
02-01 10:34:39.012 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.client.ClientRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.012 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.013 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceServerRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.013 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.014 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.014 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.014 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserClientRelationRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.015 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.015 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:34:39.016 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
02-01 10:34:39.102 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
02-01 10:34:39.281 INFO  --- [main] [GenericScope]:295 o.springframework.cloud.context.scope.GenericScope >>> BeanFactory id=c77ab896-accd-3f33-b41a-69bc393e8f7e
02-01 10:34:39.432 INFO  --- [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker]:330 o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >>> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02-01 10:34:39.928 INFO  --- [main] [TomcatWebServer]:92 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat initialized with port(s): 10000 (http)
02-01 10:34:39.937 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardService >>> Starting service [Tomcat]
02-01 10:34:39.938 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardEngine >>> Starting Servlet engine: [Apache Tomcat/9.0.29]
02-01 10:34:40.042 INFO  --- [main] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring embedded WebApplicationContext
02-01 10:34:40.042 INFO  --- [main] [ServletWebServerApplicationContext]:284 org.springframework.web.context.ContextLoader >>> Root WebApplicationContext: initialization completed in 2191 ms
02-01 10:34:40.827 INFO  --- [main] [AccessCardPersistenceFilter]:64 c.g.security.filter.AccessCardPersistenceFilter >>> init accessCardPersistenceFilter
02-01 10:34:40.929 INFO  --- [main] [LogHelper]:31 org.hibernate.jpa.internal.util.LogHelper >>> HHH000204: Processing PersistenceUnitInfo [name: default]
02-01 10:34:40.997 INFO  --- [main] [Version]:46 org.hibernate.Version >>> HHH000412: Hibernate Core {5.4.9.Final}
02-01 10:34:41.138 INFO  --- [main] [JavaReflectionManager]:49 org.hibernate.annotations.common.Version >>> HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
02-01 10:34:41.233 INFO  --- [main] [HikariDataSource]:110 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Starting...
02-01 10:34:41.379 INFO  --- [main] [HikariDataSource]:123 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Start completed.
02-01 10:34:41.393 INFO  --- [main] [Dialect]:172 org.hibernate.dialect.Dialect >>> HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
02-01 10:34:42.191 INFO  --- [main] [JtaPlatformInitiator]:52 o.h.e.t.jta.platform.internal.JtaPlatformInitiator >>> HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-01 10:34:42.197 INFO  --- [main] [AbstractEntityManagerFactoryBean]:416 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Initialized JPA EntityManagerFactory for persistence unit 'default'
02-01 10:34:42.949 INFO  --- [main] [SecurityAutoConfiguration]:46 c.g.security.config.SecurityAutoConfiguration >>> 启用私钥进行签名############
02-01 10:34:43.304 INFO  --- [main] [SecurityAutoConfiguration]:39 c.g.security.config.SecurityAutoConfiguration >>> 启用公钥解密############
02-01 10:34:43.309 INFO  --- [main] [Oauth2Controller]:47 c.g.cloud.auth.server.controller.Oauth2Controller >>> Oauth2Controller init:{authorization_code=com.gapache.cloud.auth.server.security.impl.AuthorizationCodeGenerateTokenLogic@56e78538, client_credentials=com.gapache.cloud.auth.server.security.impl.ClientCredentialsGenerateTokenLogic@731fae, password=com.gapache.cloud.auth.server.security.impl.PasswordBaseGenerateTokenLogic@438a2d3, refresh_token=com.gapache.cloud.auth.server.security.impl.RefreshTokenGenerateTokenLogic@6fe9c048}
02-01 10:34:43.558 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/images/**'], []
02-01 10:34:43.558 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/lib/**'], []
02-01 10:34:43.559 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/css/**'], []
02-01 10:34:43.559 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/fonts/**'], []
02-01 10:34:43.559 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/js/**'], []
02-01 10:34:43.560 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/eleTree.js'], []
02-01 10:34:43.561 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/favicon.ico'], []
02-01 10:34:43.561 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/excel/**'], []
02-01 10:34:43.561 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui_exts/**'], []
02-01 10:34:43.561 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui/**'], []
02-01 10:34:43.624 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10b2c1cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@169d1f92, org.springframework.security.web.header.HeaderWriterFilter@1c681761, org.springframework.security.web.authentication.logout.LogoutFilter@147097ad, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@299ddfff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fcfcf37, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@478fe415, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20a25f66, org.springframework.security.web.session.SessionManagementFilter@7512a9a6, org.springframework.security.web.access.ExceptionTranslationFilter@339cde4b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ad7a305]
02-01 10:34:43.648 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:34:43.658 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:34:43.892 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Initializing ExecutorService 'applicationTaskExecutor'
02-01 10:34:44.082 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 10:34:44.324 INFO  --- [main] [Version]:41 org.redisson.Version >>> Redisson 3.13.4
02-01 10:34:44.611 INFO  --- [redisson-netty-4-15] [ConnectionPool$1]:167 o.r.connection.pool.MasterPubSubConnectionPool >>> 1 connections initialized for /127.0.0.1:6379
02-01 10:34:44.640 INFO  --- [redisson-netty-4-18] [ConnectionPool$1]:167 org.redisson.connection.pool.MasterConnectionPool >>> 24 connections initialized for /127.0.0.1:6379
02-01 10:34:44.721 INFO  --- [main] [RedissonAutoConfiguration]:48 com.gapache.redis.RedissonAutoConfiguration >>> init redissonClient and DistributedLock success
02-01 10:34:44.729 INFO  --- [main] [AuthResourceServerAutoConfiguration$LocalResourceReporterAutoConfiguration]:165 c.g.s.config.AuthResourceServerAutoConfiguration >>> enable register to self[Auth-Center-Server]
02-01 10:34:44.739 INFO  --- [main] [AuthResourceServerAutoConfiguration$RemotePublicKeyLoaderAutoConfiguration]:183 c.g.s.config.AuthResourceServerAutoConfiguration >>> cloudRestTemplate
02-01 10:34:44.763 INFO  --- [main] [AuthResourceServerAutoConfiguration]:61 c.g.s.config.AuthResourceServerAutoConfiguration >>> auto setting AuthResourceServer's config
02-01 10:34:45.165 INFO  --- [main] [EndpointLinksResolver]:58 o.s.b.actuate.endpoint.web.EndpointLinksResolver >>> Exposing 18 endpoint(s) beneath base path '/actuator'
02-01 10:34:45.293 INFO  --- [main] [AuthCenterServer]:96 com.gapache.cloud.auth.server.AuthCenterServer >>> 1.AuthCenter
02-01 10:34:45.731 INFO  --- [main] [AuthCenterServer]:79 com.gapache.cloud.auth.server.AuthCenterServer >>> husen.$2a$10$eyNOjzySlwIbAXLRxdlAgOcBU2Gx50oF0f7SMeml9PhHUiIFek1Bm.我是超级管理员.https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif
02-01 10:34:45.766 INFO  --- [main] [TomcatWebServer]:204 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat started on port(s): 10000 (http) with context path ''
02-01 10:34:45.967 INFO  --- [main] [NacosServiceRegistry]:65 c.a.cloud.nacos.registry.NacosServiceRegistry >>> nacos registry, DEFAULT_GROUP auth-center-server 192.168.1.100:10000 register finished
02-01 10:34:45.974 INFO  --- [main] [StartupInfoLogger]:61 com.gapache.cloud.auth.server.AuthCenterServer >>> Started AuthCenterServer in 9.31 seconds (JVM running for 10.316)
02-01 10:34:45.978 INFO  --- [main] [AuthResourceServerAutoConfiguration]:66 c.g.s.config.AuthResourceServerAutoConfiguration >>> AuthResourceServerAutoConfiguration listening event:org.springframework.boot.context.event.ApplicationReadyEvent[source=org.springframework.boot.SpringApplication@3894d1b1]
02-01 10:34:45.997 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:client, clientController, com.gapache.cloud.auth.server.controller.ClientController@6c7f804c
02-01 10:34:46.002 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:role, roleController, com.gapache.cloud.auth.server.controller.RoleController@4a773f08
02-01 10:34:46.003 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:user, userController, com.gapache.cloud.auth.server.controller.UserController@284f25e6
02-01 10:34:46.005 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:page, name=分页查询角色)
02-01 10:34:46.005 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:update, name=更新角色)
02-01 10:34:46.006 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:delete, name=删除角色)
02-01 10:34:46.006 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:create, name=创建角色)
02-01 10:34:46.006 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:bindUser, name=绑定用户到客户端)
02-01 10:34:46.006 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:findByClientId, name=根据clientId查询client)
02-01 10:34:46.006 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:create, name=创建客户端)
02-01 10:34:46.007 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:setUserRole, name=设置用户角色)
02-01 10:34:46.007 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:create, name=创建用户)
02-01 10:34:46.018 INFO  --- [main] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"分页查询角色","scope":"role:page"},{"name":"更新角色","scope":"role:update"},{"name":"删除角色","scope":"role:delete"},{"name":"创建角色","scope":"role:create"},{"name":"绑定用户到客户端","scope":"client:bindUser"},{"name":"根据clientId查询client","scope":"client:findByClientId"},{"name":"创建客户端","scope":"client:create"},{"name":"设置用户角色","scope":"user:setUserRole"},{"name":"创建用户","scope":"user:create"}],"clientId":"husen19950528201314lq19980824","resourceServerName":"AuthCenter"}
02-01 10:34:46.084 INFO  --- [main] [ResourceServiceImpl]:110 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 10:34:46.085 INFO  --- [main] [ResourceServiceImpl]:113 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 10:34:46.086 INFO  --- [main] [ResourceServiceImpl]:115 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[]
02-01 10:34:46.100 INFO  --- [main] [AuthResourceServerAutoConfiguration]:134 c.g.s.config.AuthResourceServerAutoConfiguration >>> reporting resource finish, result:true, cost time:0ms
02-01 10:34:46.144 INFO  --- [RMI TCP Connection(2)-127.0.0.1] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring DispatcherServlet 'dispatcherServlet'
02-01 10:34:46.144 INFO  --- [RMI TCP Connection(2)-127.0.0.1] [FrameworkServlet]:525 org.springframework.web.servlet.DispatcherServlet >>> Initializing Servlet 'dispatcherServlet'
02-01 10:34:46.155 INFO  --- [RMI TCP Connection(2)-127.0.0.1] [FrameworkServlet]:547 org.springframework.web.servlet.DispatcherServlet >>> Completed initialization in 11 ms
02-01 10:34:46.343 INFO  --- [boundedElastic-1] [EpollProvider]:68 io.lettuce.core.EpollProvider >>> Starting without optional epoll library
02-01 10:34:46.345 INFO  --- [boundedElastic-1] [KqueueProvider]:70 io.lettuce.core.KqueueProvider >>> Starting without optional kqueue library
02-01 10:36:51.383 INFO  --- [http-nio-10000-exec-2] [JwtGenerateTokenStrategy]:30 c.g.c.a.s.security.impl.JwtGenerateTokenStrategy >>> generate params:{content={"clientId":"husen19950528201314lq19980824","id":0,"name":"husen","sign":true,"uniqueId":0}, timeout=-1}
02-01 10:38:40.376 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 10:38:40.461 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:80 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registering from Nacos Server now...
02-01 10:38:40.467 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:100 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registration finished.
02-01 10:38:40.468 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Shutting down ExecutorService 'applicationTaskExecutor'
02-01 10:38:40.475 INFO  --- [SpringContextShutdownHook] [AbstractEntityManagerFactoryBean]:598 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Closing JPA EntityManagerFactory for persistence unit 'default'
02-01 10:38:40.602 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:350 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown initiated...
02-01 10:38:40.615 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:352 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown completed.
02-01 10:38:40.628 INFO  --- [SpringContextShutdownHook] [AccessCardPersistenceFilter]:69 c.g.security.filter.AccessCardPersistenceFilter >>> destroy accessCardPersistenceFilter
02-01 10:38:46.746 INFO  --- [main] [SpringApplication]:651 com.gapache.cloud.auth.server.AuthCenterServer >>> No active profile set, falling back to default profiles: default
02-01 10:38:47.505 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
02-01 10:38:47.788 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:38:47.788 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-01 10:38:47.908 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 111ms. Found 9 JPA repository interfaces.
02-01 10:38:47.926 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 10:38:47.928 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
02-01 10:38:47.945 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.client.ClientRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.946 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.947 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceServerRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.948 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.948 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.949 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.949 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserClientRelationRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.950 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.950 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 10:38:47.950 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
02-01 10:38:48.048 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
02-01 10:38:48.207 INFO  --- [main] [GenericScope]:295 o.springframework.cloud.context.scope.GenericScope >>> BeanFactory id=c77ab896-accd-3f33-b41a-69bc393e8f7e
02-01 10:38:48.348 INFO  --- [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker]:330 o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >>> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02-01 10:38:48.812 INFO  --- [main] [TomcatWebServer]:92 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat initialized with port(s): 10000 (http)
02-01 10:38:48.822 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardService >>> Starting service [Tomcat]
02-01 10:38:48.822 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardEngine >>> Starting Servlet engine: [Apache Tomcat/9.0.29]
02-01 10:38:48.918 INFO  --- [main] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring embedded WebApplicationContext
02-01 10:38:48.918 INFO  --- [main] [ServletWebServerApplicationContext]:284 org.springframework.web.context.ContextLoader >>> Root WebApplicationContext: initialization completed in 2152 ms
02-01 10:38:49.648 INFO  --- [main] [AccessCardPersistenceFilter]:64 c.g.security.filter.AccessCardPersistenceFilter >>> init accessCardPersistenceFilter
02-01 10:38:49.744 INFO  --- [main] [LogHelper]:31 org.hibernate.jpa.internal.util.LogHelper >>> HHH000204: Processing PersistenceUnitInfo [name: default]
02-01 10:38:49.809 INFO  --- [main] [Version]:46 org.hibernate.Version >>> HHH000412: Hibernate Core {5.4.9.Final}
02-01 10:38:49.946 INFO  --- [main] [JavaReflectionManager]:49 org.hibernate.annotations.common.Version >>> HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
02-01 10:38:50.046 INFO  --- [main] [HikariDataSource]:110 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Starting...
02-01 10:38:50.188 INFO  --- [main] [HikariDataSource]:123 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Start completed.
02-01 10:38:50.199 INFO  --- [main] [Dialect]:172 org.hibernate.dialect.Dialect >>> HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
02-01 10:38:50.990 INFO  --- [main] [JtaPlatformInitiator]:52 o.h.e.t.jta.platform.internal.JtaPlatformInitiator >>> HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-01 10:38:50.998 INFO  --- [main] [AbstractEntityManagerFactoryBean]:416 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Initialized JPA EntityManagerFactory for persistence unit 'default'
02-01 10:38:51.737 INFO  --- [main] [SecurityAutoConfiguration]:46 c.g.security.config.SecurityAutoConfiguration >>> 启用私钥进行签名############
02-01 10:38:52.083 INFO  --- [main] [SecurityAutoConfiguration]:39 c.g.security.config.SecurityAutoConfiguration >>> 启用公钥解密############
02-01 10:38:52.087 INFO  --- [main] [Oauth2Controller]:47 c.g.cloud.auth.server.controller.Oauth2Controller >>> Oauth2Controller init:{authorization_code=com.gapache.cloud.auth.server.security.impl.AuthorizationCodeGenerateTokenLogic@3c9971af, client_credentials=com.gapache.cloud.auth.server.security.impl.ClientCredentialsGenerateTokenLogic@4abdd5e, password=com.gapache.cloud.auth.server.security.impl.PasswordBaseGenerateTokenLogic@66d61298, refresh_token=com.gapache.cloud.auth.server.security.impl.RefreshTokenGenerateTokenLogic@7b9fea11}
02-01 10:38:52.314 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/images/**'], []
02-01 10:38:52.315 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/lib/**'], []
02-01 10:38:52.315 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/css/**'], []
02-01 10:38:52.315 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/fonts/**'], []
02-01 10:38:52.315 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/js/**'], []
02-01 10:38:52.315 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/eleTree.js'], []
02-01 10:38:52.316 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/favicon.ico'], []
02-01 10:38:52.316 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/excel/**'], []
02-01 10:38:52.316 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui_exts/**'], []
02-01 10:38:52.316 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui/**'], []
02-01 10:38:52.364 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10b2c1cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@169d1f92, org.springframework.security.web.header.HeaderWriterFilter@1c681761, org.springframework.security.web.authentication.logout.LogoutFilter@147097ad, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@299ddfff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fcfcf37, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@478fe415, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20a25f66, org.springframework.security.web.session.SessionManagementFilter@7512a9a6, org.springframework.security.web.access.ExceptionTranslationFilter@339cde4b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ad7a305]
02-01 10:38:52.388 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:38:52.400 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 10:38:52.621 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Initializing ExecutorService 'applicationTaskExecutor'
02-01 10:38:52.811 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 10:38:53.055 INFO  --- [main] [Version]:41 org.redisson.Version >>> Redisson 3.13.4
02-01 10:38:53.325 INFO  --- [redisson-netty-4-23] [ConnectionPool$1]:167 o.r.connection.pool.MasterPubSubConnectionPool >>> 1 connections initialized for /127.0.0.1:6379
02-01 10:38:53.349 INFO  --- [redisson-netty-4-19] [ConnectionPool$1]:167 org.redisson.connection.pool.MasterConnectionPool >>> 24 connections initialized for /127.0.0.1:6379
02-01 10:38:53.429 INFO  --- [main] [RedissonAutoConfiguration]:48 com.gapache.redis.RedissonAutoConfiguration >>> init redissonClient and DistributedLock success
02-01 10:38:53.437 INFO  --- [main] [AuthResourceServerAutoConfiguration$LocalResourceReporterAutoConfiguration]:165 c.g.s.config.AuthResourceServerAutoConfiguration >>> enable register to self[Auth-Center-Server]
02-01 10:38:53.446 INFO  --- [main] [AuthResourceServerAutoConfiguration$RemotePublicKeyLoaderAutoConfiguration]:183 c.g.s.config.AuthResourceServerAutoConfiguration >>> cloudRestTemplate
02-01 10:38:53.468 INFO  --- [main] [AuthResourceServerAutoConfiguration]:61 c.g.s.config.AuthResourceServerAutoConfiguration >>> auto setting AuthResourceServer's config
02-01 10:38:53.859 INFO  --- [main] [EndpointLinksResolver]:58 o.s.b.actuate.endpoint.web.EndpointLinksResolver >>> Exposing 18 endpoint(s) beneath base path '/actuator'
02-01 10:38:53.992 INFO  --- [main] [AuthCenterServer]:96 com.gapache.cloud.auth.server.AuthCenterServer >>> 1.AuthCenter
02-01 10:38:54.428 INFO  --- [main] [AuthCenterServer]:79 com.gapache.cloud.auth.server.AuthCenterServer >>> husen.$2a$10$VFPYzQR0hung572NO7ySEup6ld8vq0DkV58OhQwjyqnykSSoL6zJO.我是超级管理员.https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif
02-01 10:38:54.464 INFO  --- [main] [TomcatWebServer]:204 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat started on port(s): 10000 (http) with context path ''
02-01 10:38:54.611 INFO  --- [main] [NacosServiceRegistry]:65 c.a.cloud.nacos.registry.NacosServiceRegistry >>> nacos registry, DEFAULT_GROUP auth-center-server 192.168.1.100:10000 register finished
02-01 10:38:54.617 INFO  --- [main] [StartupInfoLogger]:61 com.gapache.cloud.auth.server.AuthCenterServer >>> Started AuthCenterServer in 8.92 seconds (JVM running for 10.139)
02-01 10:38:54.622 INFO  --- [main] [AuthResourceServerAutoConfiguration]:66 c.g.s.config.AuthResourceServerAutoConfiguration >>> AuthResourceServerAutoConfiguration listening event:org.springframework.boot.context.event.ApplicationReadyEvent[source=org.springframework.boot.SpringApplication@7fd3197b]
02-01 10:38:54.645 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:client, clientController, com.gapache.cloud.auth.server.controller.ClientController@3e73f5e7
02-01 10:38:54.649 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:role, roleController, com.gapache.cloud.auth.server.controller.RoleController@a4dcede
02-01 10:38:54.650 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:user, userController, com.gapache.cloud.auth.server.controller.UserController@24e7087a
02-01 10:38:54.651 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:page, name=分页查询角色)
02-01 10:38:54.651 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:update, name=更新角色)
02-01 10:38:54.652 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:delete, name=删除角色)
02-01 10:38:54.652 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:create, name=创建角色)
02-01 10:38:54.652 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:findByClientId, name=根据clientId查询client)
02-01 10:38:54.652 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:create, name=创建客户端)
02-01 10:38:54.652 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:bindUser, name=绑定用户到客户端)
02-01 10:38:54.653 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:setUserRole, name=设置用户角色)
02-01 10:38:54.653 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:create, name=创建用户)
02-01 10:38:54.661 INFO  --- [main] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"分页查询角色","scope":"role:page"},{"name":"更新角色","scope":"role:update"},{"name":"删除角色","scope":"role:delete"},{"name":"创建角色","scope":"role:create"},{"name":"根据clientId查询client","scope":"client:findByClientId"},{"name":"创建客户端","scope":"client:create"},{"name":"绑定用户到客户端","scope":"client:bindUser"},{"name":"设置用户角色","scope":"user:setUserRole"},{"name":"创建用户","scope":"user:create"}],"clientId":"husen19950528201314lq19980824","resourceServerName":"AuthCenter"}
02-01 10:38:54.711 INFO  --- [main] [ResourceServiceImpl]:110 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 10:38:54.713 INFO  --- [main] [ResourceServiceImpl]:113 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 10:38:54.713 INFO  --- [main] [ResourceServiceImpl]:115 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[]
02-01 10:38:54.722 INFO  --- [main] [AuthResourceServerAutoConfiguration]:134 c.g.s.config.AuthResourceServerAutoConfiguration >>> reporting resource finish, result:true, cost time:0ms
02-01 10:38:54.958 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring DispatcherServlet 'dispatcherServlet'
02-01 10:38:54.959 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [FrameworkServlet]:525 org.springframework.web.servlet.DispatcherServlet >>> Initializing Servlet 'dispatcherServlet'
02-01 10:38:54.977 INFO  --- [RMI TCP Connection(3)-127.0.0.1] [FrameworkServlet]:547 org.springframework.web.servlet.DispatcherServlet >>> Completed initialization in 18 ms
02-01 10:38:55.119 INFO  --- [boundedElastic-1] [EpollProvider]:68 io.lettuce.core.EpollProvider >>> Starting without optional epoll library
02-01 10:38:55.121 INFO  --- [boundedElastic-1] [KqueueProvider]:70 io.lettuce.core.KqueueProvider >>> Starting without optional kqueue library
02-01 10:41:16.343 INFO  --- [http-nio-10000-exec-8] [JwtGenerateTokenStrategy]:30 c.g.c.a.s.security.impl.JwtGenerateTokenStrategy >>> generate params:{content={"clientId":"husen19950528201314lq19980824","id":0,"name":"husen","sign":true,"uniqueId":0}, timeout=2592000000}
02-01 11:05:06.531 INFO  --- [http-nio-10000-exec-3] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=true)
02-01 11:05:07.052 INFO  --- [http-nio-10000-exec-3] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:05:07.092 INFO  --- [http-nio-10000-exec-3] [BaseLoadBalancer]:197 com.netflix.loadbalancer.BaseLoadBalancer >>> Client: auth-center-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth-center-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
02-01 11:05:07.105 INFO  --- [http-nio-10000-exec-3] [DynamicServerListLoadBalancer]:222 c.n.loadbalancer.DynamicServerListLoadBalancer >>> Using serverListUpdater PollingServerListUpdater
02-01 11:05:07.158 INFO  --- [http-nio-10000-exec-3] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:05:07.160 INFO  --- [http-nio-10000-exec-3] [DynamicServerListLoadBalancer]:150 c.n.loadbalancer.DynamicServerListLoadBalancer >>> DynamicServerListLoadBalancer for client auth-center-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth-center-server,current list of Servers=[192.168.1.100:10000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.100:10000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@78880c6b
02-01 11:05:07.210 INFO  --- [http-nio-10000-exec-3] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:05:08.111 INFO  --- [PollingServerListUpdater-0] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:07:00.622 INFO  --- [Thread-46] [PollingServerListUpdater$LazyHolder$2]:53 com.netflix.loadbalancer.PollingServerListUpdater >>> Shutting down the Executor Pool for PollingServerListUpdater
02-01 11:07:00.626 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 11:07:00.722 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:80 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registering from Nacos Server now...
02-01 11:07:00.727 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:100 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registration finished.
02-01 11:07:00.728 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Shutting down ExecutorService 'applicationTaskExecutor'
02-01 11:07:00.740 INFO  --- [SpringContextShutdownHook] [AbstractEntityManagerFactoryBean]:598 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Closing JPA EntityManagerFactory for persistence unit 'default'
02-01 11:07:00.865 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:350 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown initiated...
02-01 11:07:00.877 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:352 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown completed.
02-01 11:07:00.898 INFO  --- [SpringContextShutdownHook] [AccessCardPersistenceFilter]:69 c.g.security.filter.AccessCardPersistenceFilter >>> destroy accessCardPersistenceFilter
02-01 11:07:07.263 INFO  --- [main] [SpringApplication]:651 com.gapache.cloud.auth.server.AuthCenterServer >>> No active profile set, falling back to default profiles: default
02-01 11:07:07.997 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
02-01 11:07:08.271 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 11:07:08.271 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-01 11:07:08.393 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 114ms. Found 9 JPA repository interfaces.
02-01 11:07:08.409 INFO  --- [main] [RepositoryConfigurationDelegate]:249 o.s.d.r.config.RepositoryConfigurationDelegate >>> Multiple Spring Data modules found, entering strict repository configuration mode!
02-01 11:07:08.411 INFO  --- [main] [RepositoryConfigurationDelegate]:127 o.s.d.r.config.RepositoryConfigurationDelegate >>> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
02-01 11:07:08.430 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.client.ClientRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.431 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.431 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.resource.ResourceServerRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.432 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.432 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.433 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.434 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserClientRelationRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.435 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.436 INFO  --- [main] [RepositoryConfigurationExtensionSupport]:348 o.s.d.r.c.RepositoryConfigurationExtensionSupport >>> Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gapache.cloud.auth.server.dao.repository.user.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
02-01 11:07:08.436 INFO  --- [main] [RepositoryConfigurationDelegate]:187 o.s.d.r.config.RepositoryConfigurationDelegate >>> Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
02-01 11:07:08.533 WARN  --- [main] [EndpointId]:155 o.springframework.boot.actuate.endpoint.EndpointId >>> Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
02-01 11:07:08.706 INFO  --- [main] [GenericScope]:295 o.springframework.cloud.context.scope.GenericScope >>> BeanFactory id=c77ab896-accd-3f33-b41a-69bc393e8f7e
02-01 11:07:08.853 INFO  --- [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker]:330 o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >>> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
02-01 11:07:09.327 INFO  --- [main] [TomcatWebServer]:92 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat initialized with port(s): 10000 (http)
02-01 11:07:09.337 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardService >>> Starting service [Tomcat]
02-01 11:07:09.338 INFO  --- [main] [DirectJDKLog]:173 org.apache.catalina.core.StandardEngine >>> Starting Servlet engine: [Apache Tomcat/9.0.29]
02-01 11:07:09.456 INFO  --- [main] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring embedded WebApplicationContext
02-01 11:07:09.456 INFO  --- [main] [ServletWebServerApplicationContext]:284 org.springframework.web.context.ContextLoader >>> Root WebApplicationContext: initialization completed in 2160 ms
02-01 11:07:10.228 INFO  --- [main] [AccessCardPersistenceFilter]:64 c.g.security.filter.AccessCardPersistenceFilter >>> init accessCardPersistenceFilter
02-01 11:07:10.317 INFO  --- [main] [LogHelper]:31 org.hibernate.jpa.internal.util.LogHelper >>> HHH000204: Processing PersistenceUnitInfo [name: default]
02-01 11:07:10.390 INFO  --- [main] [Version]:46 org.hibernate.Version >>> HHH000412: Hibernate Core {5.4.9.Final}
02-01 11:07:10.534 INFO  --- [main] [JavaReflectionManager]:49 org.hibernate.annotations.common.Version >>> HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
02-01 11:07:10.628 INFO  --- [main] [HikariDataSource]:110 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Starting...
02-01 11:07:10.771 INFO  --- [main] [HikariDataSource]:123 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Start completed.
02-01 11:07:10.781 INFO  --- [main] [Dialect]:172 org.hibernate.dialect.Dialect >>> HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
02-01 11:07:11.590 INFO  --- [main] [JtaPlatformInitiator]:52 o.h.e.t.jta.platform.internal.JtaPlatformInitiator >>> HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-01 11:07:11.596 INFO  --- [main] [AbstractEntityManagerFactoryBean]:416 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Initialized JPA EntityManagerFactory for persistence unit 'default'
02-01 11:07:12.332 INFO  --- [main] [SecurityAutoConfiguration]:46 c.g.security.config.SecurityAutoConfiguration >>> 启用私钥进行签名############
02-01 11:07:12.682 INFO  --- [main] [SecurityAutoConfiguration]:39 c.g.security.config.SecurityAutoConfiguration >>> 启用公钥解密############
02-01 11:07:12.687 INFO  --- [main] [Oauth2Controller]:47 c.g.cloud.auth.server.controller.Oauth2Controller >>> Oauth2Controller init:{authorization_code=com.gapache.cloud.auth.server.security.impl.AuthorizationCodeGenerateTokenLogic@3d73cd78, client_credentials=com.gapache.cloud.auth.server.security.impl.ClientCredentialsGenerateTokenLogic@acd115d, password=com.gapache.cloud.auth.server.security.impl.PasswordBaseGenerateTokenLogic@45cf0c15, refresh_token=com.gapache.cloud.auth.server.security.impl.RefreshTokenGenerateTokenLogic@2f2dc407}
02-01 11:07:12.919 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/images/**'], []
02-01 11:07:12.920 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/lib/**'], []
02-01 11:07:12.920 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/css/**'], []
02-01 11:07:12.920 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/fonts/**'], []
02-01 11:07:12.920 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/js/**'], []
02-01 11:07:12.921 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/eleTree.js'], []
02-01 11:07:12.921 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/favicon.ico'], []
02-01 11:07:12.921 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/excel/**'], []
02-01 11:07:12.921 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui_exts/**'], []
02-01 11:07:12.921 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: Ant [pattern='/layui/**'], []
02-01 11:07:12.964 INFO  --- [main] [DefaultSecurityFilterChain]:43 o.s.security.web.DefaultSecurityFilterChain >>> Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f29e630, org.springframework.security.web.context.SecurityContextPersistenceFilter@1be427b4, org.springframework.security.web.header.HeaderWriterFilter@aaa7000, org.springframework.security.web.authentication.logout.LogoutFilter@5513a46b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4ef28dc4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73a1a1b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fb1948c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30811f91, org.springframework.security.web.session.SessionManagementFilter@141234df, org.springframework.security.web.access.ExceptionTranslationFilter@da11873, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38ad86b1]
02-01 11:07:12.982 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 11:07:12.990 INFO  --- [main] [URLConfigurationSource]:126 com.netflix.config.sources.URLConfigurationSource >>> URLs to be used as dynamic configuration source: [file:/Users/husen/develop/codes/mine/big-plan/ac/auth-center-server/target/classes/config.properties]
02-01 11:07:13.207 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Initializing ExecutorService 'applicationTaskExecutor'
02-01 11:07:13.407 INFO  --- [main] [ExecutorConfigurationSupport]:171 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 11:07:13.640 INFO  --- [main] [Version]:41 org.redisson.Version >>> Redisson 3.13.4
02-01 11:07:13.935 INFO  --- [redisson-netty-4-17] [ConnectionPool$1]:167 o.r.connection.pool.MasterPubSubConnectionPool >>> 1 connections initialized for /127.0.0.1:6379
02-01 11:07:13.964 INFO  --- [redisson-netty-4-18] [ConnectionPool$1]:167 org.redisson.connection.pool.MasterConnectionPool >>> 24 connections initialized for /127.0.0.1:6379
02-01 11:07:14.037 INFO  --- [main] [RedissonAutoConfiguration]:48 com.gapache.redis.RedissonAutoConfiguration >>> init redissonClient and DistributedLock success
02-01 11:07:14.045 INFO  --- [main] [AuthResourceServerAutoConfiguration$LocalResourceReporterAutoConfiguration]:165 c.g.s.config.AuthResourceServerAutoConfiguration >>> enable register to self[Auth-Center-Server]
02-01 11:07:14.055 INFO  --- [main] [AuthResourceServerAutoConfiguration$RemotePublicKeyLoaderAutoConfiguration]:183 c.g.s.config.AuthResourceServerAutoConfiguration >>> cloudRestTemplate
02-01 11:07:14.090 INFO  --- [main] [AuthResourceServerAutoConfiguration]:61 c.g.s.config.AuthResourceServerAutoConfiguration >>> auto setting AuthResourceServer's config
02-01 11:07:14.480 INFO  --- [main] [EndpointLinksResolver]:58 o.s.b.actuate.endpoint.web.EndpointLinksResolver >>> Exposing 18 endpoint(s) beneath base path '/actuator'
02-01 11:07:14.615 INFO  --- [main] [AuthCenterServer]:95 com.gapache.cloud.auth.server.AuthCenterServer >>> 1.AuthCenter
02-01 11:07:15.042 INFO  --- [main] [AuthCenterServer]:78 com.gapache.cloud.auth.server.AuthCenterServer >>> husen.$2a$10$T0mnSfLFdjFZa/HjQVYsRu5urH.DGcTfK220fEjA8PLfq41n.EtJW.我是超级管理员.https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif
02-01 11:07:15.080 INFO  --- [main] [TomcatWebServer]:204 o.s.boot.web.embedded.tomcat.TomcatWebServer >>> Tomcat started on port(s): 10000 (http) with context path ''
02-01 11:07:15.215 INFO  --- [main] [NacosServiceRegistry]:65 c.a.cloud.nacos.registry.NacosServiceRegistry >>> nacos registry, DEFAULT_GROUP auth-center-server 192.168.1.100:10000 register finished
02-01 11:07:15.221 INFO  --- [main] [StartupInfoLogger]:61 com.gapache.cloud.auth.server.AuthCenterServer >>> Started AuthCenterServer in 9.221 seconds (JVM running for 10.115)
02-01 11:07:15.225 INFO  --- [main] [AuthResourceServerAutoConfiguration]:66 c.g.s.config.AuthResourceServerAutoConfiguration >>> AuthResourceServerAutoConfiguration listening event:org.springframework.boot.context.event.ApplicationReadyEvent[source=org.springframework.boot.SpringApplication@19c6e821]
02-01 11:07:15.244 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:client, clientController, com.gapache.cloud.auth.server.controller.ClientController@71eaef6a
02-01 11:07:15.249 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:role, roleController, com.gapache.cloud.auth.server.controller.RoleController@2e20c20b
02-01 11:07:15.250 INFO  --- [main] [AuthResourceServerAutoConfiguration]:92 c.g.s.config.AuthResourceServerAutoConfiguration >>> find need auth component:user, userController, com.gapache.cloud.auth.server.controller.UserController@36762234
02-01 11:07:15.251 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:page, name=分页查询角色)
02-01 11:07:15.251 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:update, name=更新角色)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:delete, name=删除角色)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=role:create, name=创建角色)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:bindUser, name=绑定用户到客户端)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:findByClientId, name=根据clientId查询client)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=client:create, name=创建客户端)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:setUserRole, name=设置用户角色)
02-01 11:07:15.252 INFO  --- [main] [AuthResourceServerAutoConfiguration]:125 c.g.s.config.AuthResourceServerAutoConfiguration >>> $$------AuthResource------AuthResourceDTO(id=null, scope=user:create, name=创建用户)
02-01 11:07:15.262 INFO  --- [main] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"分页查询角色","scope":"role:page"},{"name":"更新角色","scope":"role:update"},{"name":"删除角色","scope":"role:delete"},{"name":"创建角色","scope":"role:create"},{"name":"绑定用户到客户端","scope":"client:bindUser"},{"name":"根据clientId查询client","scope":"client:findByClientId"},{"name":"创建客户端","scope":"client:create"},{"name":"设置用户角色","scope":"user:setUserRole"},{"name":"创建用户","scope":"user:create"}],"clientId":"husen19950528201314lq19980824","resourceServerName":"AuthCenter"}
02-01 11:07:15.313 INFO  --- [main] [ResourceServiceImpl]:110 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 11:07:15.315 INFO  --- [main] [ResourceServiceImpl]:113 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 11:07:15.315 INFO  --- [main] [ResourceServiceImpl]:115 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[]
02-01 11:07:15.325 INFO  --- [main] [AuthResourceServerAutoConfiguration]:134 c.g.s.config.AuthResourceServerAutoConfiguration >>> reporting resource finish, result:true, cost time:0ms
02-01 11:07:15.642 INFO  --- [RMI TCP Connection(1)-127.0.0.1] [DirectJDKLog]:173 o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] >>> Initializing Spring DispatcherServlet 'dispatcherServlet'
02-01 11:07:15.642 INFO  --- [RMI TCP Connection(1)-127.0.0.1] [FrameworkServlet]:525 org.springframework.web.servlet.DispatcherServlet >>> Initializing Servlet 'dispatcherServlet'
02-01 11:07:15.655 INFO  --- [RMI TCP Connection(1)-127.0.0.1] [FrameworkServlet]:547 org.springframework.web.servlet.DispatcherServlet >>> Completed initialization in 13 ms
02-01 11:07:15.802 INFO  --- [boundedElastic-1] [EpollProvider]:68 io.lettuce.core.EpollProvider >>> Starting without optional epoll library
02-01 11:07:15.804 INFO  --- [boundedElastic-1] [KqueueProvider]:70 io.lettuce.core.KqueueProvider >>> Starting without optional kqueue library
02-01 11:07:44.600 INFO  --- [http-nio-10000-exec-1] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=true)
02-01 11:07:44.986 INFO  --- [http-nio-10000-exec-1] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:07:45.014 INFO  --- [http-nio-10000-exec-1] [BaseLoadBalancer]:197 com.netflix.loadbalancer.BaseLoadBalancer >>> Client: auth-center-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth-center-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
02-01 11:07:45.022 INFO  --- [http-nio-10000-exec-1] [DynamicServerListLoadBalancer]:222 c.n.loadbalancer.DynamicServerListLoadBalancer >>> Using serverListUpdater PollingServerListUpdater
02-01 11:07:45.232 INFO  --- [http-nio-10000-exec-1] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:07:45.235 INFO  --- [http-nio-10000-exec-1] [DynamicServerListLoadBalancer]:150 c.n.loadbalancer.DynamicServerListLoadBalancer >>> DynamicServerListLoadBalancer for client auth-center-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth-center-server,current list of Servers=[192.168.1.100:10000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.100:10000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@426c7ea1
02-01 11:07:45.306 INFO  --- [http-nio-10000-exec-1] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:07:46.026 INFO  --- [PollingServerListUpdater-0] [ChainedDynamicProperty$ChainLink]:115 com.netflix.config.ChainedDynamicProperty >>> Flipping property: auth-center-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
02-01 11:08:15.247 INFO  --- [http-nio-10000-exec-9] [JwtGenerateTokenStrategy]:30 c.g.c.a.s.security.impl.JwtGenerateTokenStrategy >>> generate params:{content={"clientId":"husen19950528201314lq19980824","id":0,"name":"husen","sign":false,"uniqueId":0}, timeout=2592000000}
02-01 11:08:29.056 INFO  --- [http-nio-10000-exec-2] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:08:29.112 INFO  --- [http-nio-10000-exec-2] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:10:19.236 INFO  --- [http-nio-10000-exec-6] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:10:19.385 WARN  --- [http-nio-10000-exec-6] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:10:19.400 INFO  --- [http-nio-10000-exec-6] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:10:34.050 INFO  --- [http-nio-10000-exec-7] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:10:34.179 WARN  --- [http-nio-10000-exec-7] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:10:34.185 INFO  --- [http-nio-10000-exec-7] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:11:07.118 INFO  --- [http-nio-10000-exec-8] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:11:07.241 WARN  --- [http-nio-10000-exec-8] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:11:07.248 INFO  --- [http-nio-10000-exec-8] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:11:38.470 INFO  --- [http-nio-10000-exec-10] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:11:38.602 WARN  --- [http-nio-10000-exec-10] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:11:38.608 INFO  --- [http-nio-10000-exec-10] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:11:48.021 INFO  --- [http-nio-10000-exec-9] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:11:48.155 WARN  --- [http-nio-10000-exec-9] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:11:48.161 INFO  --- [http-nio-10000-exec-9] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:12:11.137 INFO  --- [http-nio-10000-exec-2] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:12:11.256 WARN  --- [http-nio-10000-exec-2] [SqlExceptionHelper]:137 org.hibernate.engine.jdbc.spi.SqlExceptionHelper >>> SQL Error: 1048, SQLState: 23000
02-01 11:12:11.264 INFO  --- [http-nio-10000-exec-2] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:12:26.085 INFO  --- [http-nio-10000-exec-1] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:12:26.218 INFO  --- [http-nio-10000-exec-1] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:12:46.038 INFO  --- [http-nio-10000-exec-3] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:12:46.173 INFO  --- [http-nio-10000-exec-3] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:13:24.596 INFO  --- [http-nio-10000-exec-4] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"根据用户名查询用户","scope":"User:findByUsername"},{"name":"判断用户是否存在","scope":"User:userIsExisted"},{"name":"根据ID查询用户","scope":"User:get"},{"name":"更新用户","scope":"User:update"},{"name":"删除用户","scope":"User:delete"},{"name":"创建用户","scope":"User:create"},{"name":"根据ID查询用户自定义信息","scope":"UserCustomizeInfo:get"},{"name":"更新用户自定义信息","scope":"UserCustomizeInfo:update"},{"name":"删除用户自定义信息","scope":"UserCustomizeInfo:delete"},{"name":"创建用户自定义信息","scope":"UserCustomizeInfo:create"}],"clientId":"user123456user","resourceServerName":"UserServer"}
02-01 11:13:24.616 INFO  --- [http-nio-10000-exec-4] [ResourceServiceImpl]:110 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 11:13:24.617 INFO  --- [http-nio-10000-exec-4] [ResourceServiceImpl]:113 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 11:13:24.619 INFO  --- [http-nio-10000-exec-4] [ResourceServiceImpl]:115 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[{"name":"根据用户名查询用户","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:findByUsername"},{"name":"判断用户是否存在","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:userIsExisted"},{"name":"根据ID查询用户","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:get"},{"name":"更新用户","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:update"},{"name":"删除用户","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:delete"},{"name":"创建用户","resourceServerId":2,"resourceServerName":"UserServer","scope":"User:create"},{"name":"根据ID查询用户自定义信息","resourceServerId":2,"resourceServerName":"UserServer","scope":"UserCustomizeInfo:get"},{"name":"更新用户自定义信息","resourceServerId":2,"resourceServerName":"UserServer","scope":"UserCustomizeInfo:update"},{"name":"删除用户自定义信息","resourceServerId":2,"resourceServerName":"UserServer","scope":"UserCustomizeInfo:delete"},{"name":"创建用户自定义信息","resourceServerId":2,"resourceServerName":"UserServer","scope":"UserCustomizeInfo:create"}]
02-01 11:47:56.702 INFO  --- [http-nio-10000-exec-7] [AccessCardPersistenceFilter]:51 c.g.security.filter.AccessCardPersistenceFilter >>> get access card from header:AccessCard(userId=0, username=husen, customerInfo={}, authorities=[AuthCenter:role:delete, AuthCenter:role:create, AuthCenter:client:create, AuthCenter:client:bindUser, AuthCenter:user:create, AuthCenter:user:setUserRole, AuthCenter:client:findByClientId, AuthCenter:role:update, AuthCenter:role:page], clientId=husen19950528201314lq19980824, sign=false)
02-01 11:47:56.853 INFO  --- [http-nio-10000-exec-7] [AccessCardPersistenceFilter]:58 c.g.security.filter.AccessCardPersistenceFilter >>> AccessCardHolder now cleared, as request processing completed
02-01 11:51:52.238 INFO  --- [http-nio-10000-exec-10] [ResourceServiceImpl]:52 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData:{"authResources":[{"name":"分页查询基金净值","scope":"FundNetWorth:page"},{"name":"检查通行证","scope":"Test:checkAccessCard"},{"name":"分页查询交易数据","scope":"Transaction:page"},{"name":"上传交易数据","scope":"Transaction:upload"},{"name":"分页查询基金","scope":"Fund:page"},{"name":"加载基金数据","scope":"Fund:loadData"},{"name":"基金加入持有","scope":"Fund:joinHold"},{"name":"基金查询持有","scope":"Fund:queryHold"},{"name":"加入自选","scope":"Fund:joinOptional"},{"name":"查询自选","scope":"Fund:queryOptional"},{"name":"添加基金","scope":"Fund:add"}],"clientId":"money123456money","resourceServerName":"MoneyManagement"}
02-01 11:51:52.277 INFO  --- [http-nio-10000-exec-10] [ResourceServiceImpl]:110 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData delete:[]
02-01 11:51:52.279 INFO  --- [http-nio-10000-exec-10] [ResourceServiceImpl]:113 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData update:[]
02-01 11:51:52.280 INFO  --- [http-nio-10000-exec-10] [ResourceServiceImpl]:115 c.g.c.auth.server.service.impl.ResourceServiceImpl >>> receiveReportData add:[{"name":"分页查询基金净值","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"FundNetWorth:page"},{"name":"检查通行证","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Test:checkAccessCard"},{"name":"分页查询交易数据","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Transaction:page"},{"name":"上传交易数据","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Transaction:upload"},{"name":"分页查询基金","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:page"},{"name":"加载基金数据","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:loadData"},{"name":"基金加入持有","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:joinHold"},{"name":"基金查询持有","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:queryHold"},{"name":"加入自选","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:joinOptional"},{"name":"查询自选","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:queryOptional"},{"name":"添加基金","resourceServerId":3,"resourceServerName":"MoneyManagement","scope":"Fund:add"}]
02-01 11:55:24.487 INFO  --- [Thread-46] [PollingServerListUpdater$LazyHolder$2]:53 com.netflix.loadbalancer.PollingServerListUpdater >>> Shutting down the Executor Pool for PollingServerListUpdater
02-01 11:55:24.503 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskScheduler >>> Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
02-01 11:55:24.586 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:80 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registering from Nacos Server now...
02-01 11:55:24.591 INFO  --- [SpringContextShutdownHook] [NacosServiceRegistry]:100 c.a.cloud.nacos.registry.NacosServiceRegistry >>> De-registration finished.
02-01 11:55:24.593 INFO  --- [SpringContextShutdownHook] [ExecutorConfigurationSupport]:208 o.s.scheduling.concurrent.ThreadPoolTaskExecutor >>> Shutting down ExecutorService 'applicationTaskExecutor'
02-01 11:55:24.611 INFO  --- [SpringContextShutdownHook] [AbstractEntityManagerFactoryBean]:598 o.s.orm.jpa.LocalContainerEntityManagerFactoryBean >>> Closing JPA EntityManagerFactory for persistence unit 'default'
02-01 11:55:24.738 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:350 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown initiated...
02-01 11:55:24.745 INFO  --- [SpringContextShutdownHook] [HikariDataSource]:352 com.zaxxer.hikari.HikariDataSource >>> HikariPool-1 - Shutdown completed.
02-01 11:55:24.762 INFO  --- [SpringContextShutdownHook] [AccessCardPersistenceFilter]:69 c.g.security.filter.AccessCardPersistenceFilter >>> destroy accessCardPersistenceFilter
